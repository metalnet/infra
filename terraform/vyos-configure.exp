#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Tue Dec 22 19:55:44 2020
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 1  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep 1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don

set vmid [lindex $argv 0]
set timeout -1
eval spawn qm terminal $vmid
match_max 100000
expect "starting serial terminal on interface serial0 (press Ctrl+O to exit)\r
"
send -- "\r"
expect "vyos login: "
send -- "vyos\r"
expect "Password: "
send -- "vyos\r"
expect "vyos@vyos:~\$ "
send -- "install image\r"
expect "Would you like to continue?*:"
send -- "\r"
expect "Partition (Auto/Parted/Skip)*:"
send -- "\r"
expect "Install the image on?*:"
send -- "\r"
expect "Continue? (Yes/No)*:"
send -- "Yes\r"
expect "How big of a root partition should I create?*:"
send -- "\r"
expect "What would you like to name this image?*:"
send -- "\r"
expect "Which one should I copy to vda?*:"
send -- "\r"
expect "Enter password for user 'vyos':"
send -- "vyos\r"
expect "Retype password for user 'vyos':"
send -- "vyos\r"
expect "Which drive should GRUB modify the boot partition on?*:"
send -- "\r"
expect "vyos@vyos:~\$ "
send -- "reboot\r"
expect "Are you sure you want to reboot this system?*"
send -- "y\r"
expect "vyos login: "
send -- "vyos\r"
expect "Password: "
send -- "vyos\r"
expect "vyos@vyos:~\$ "
send -- "configure\r"
expect "vyos@vyos# "
send -- "set interface ethernet eth0 address dhcp\r"
expect "vyos@vyos# "
send -- "set service ssh\r"
expect "vyos@vyos# "
send -- "commit\r"
expect "vyos@vyos# "
send -- "save\r"
expect "vyos@vyos# "
send -- "exit\r"
expect "vyos@vyos:~\$ "
send -- "exit\r"
expect "vyos login: "
